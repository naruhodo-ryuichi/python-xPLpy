# -*- coding: utf-8 -*-
from __future__ import unicode_literals
from time import sleep
import logging
from xPLpy.xPLMessage import MsgType, Message
from xPLpy.xPLService import XPLService

__author__ = "naruhodo-ryuichi"


class xPLdemo(XPLService):
    """
    A xPL Service demo implementation, heartbeat and target are autogenerated based on default service values
    """
    def __init__(self):
        super(xPLdemo, self).__init__()
        logging.info("xPLdemo: starting...")

    def rcv(self, msg):
        # all bus events are received, so we must filter the wanted ones
        if msg.type == MsgType.xPL_COMMAND and msg.schema == "node1.event1" and msg.values['value1'] == "On":
            # whe we receive the subscribed event, wait for 1 second and send ours
            sleep(1)
            mymsg = Message(msgtype=MsgType.xPL_COMMAND, sch="node2.event1", vals={"value2": "On"})
            self.net.send(mymsg)

    def run(self):
        logging.info("xPLdemo: running")


if __name__ == '__main__':
    xPLdemo.start()
